plugins {
  id 'org.springframework.boot' version '2.1.12.RELEASE'
  id 'io.spring.dependency-management' version '1.0.8.RELEASE'
  id 'org.asciidoctor.convert' version '1.5.8'
  id 'java'

  // Kotlin
  id "org.jetbrains.kotlin.jvm" version "1.3.61"
  id "org.jetbrains.kotlin.plugin.spring" version "1.3.61"
  id "org.jetbrains.kotlin.plugin.jpa" version "1.3.61"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
  mavenCentral()
  jcenter()
}

configurations {
  ktlint
}

ext {
  set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  runtimeOnly 'org.postgresql:postgresql'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
  testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

  // Kotlin
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
  implementation "org.jetbrains.kotlin:kotlin-reflect"
  ktlint "com.pinterest:ktlint:0.35.0"
}

task ktlint(type: JavaExec, group: "verification") {
  description = "Check Kotlin code style."
  main = "com.pinterest.ktlint.Main"
  classpath = configurations.ktlint
  args "src/**/*.kt"
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
  description = "Fix Kotlin code style deviations."
  main = "com.pinterest.ktlint.Main"
  classpath = configurations.ktlint
  args "-F", "src/**/*.kt"
}
}

test {
  outputs.dir snippetsDir
}

asciidoctor {
  inputs.dir snippetsDir
  dependsOn test
}

wrapper {
  gradleVersion = '5.6'
}
